var documenterSearchIndex = {"docs":
[{"location":"man/contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"To formally contribute to the package, please follow the usual branch pull request procedure:","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"Fork the project.\nCreate your feature branch (git checkout -b my-new-feature).\nCommit your changes (git commit -am 'Added some feature').\nPush to the branch (git push origin my-new-feature).\nCreate a new GitHub pull request.","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"If you simply have suggestions for improvement, Sasha Petrenko (<sap625@mst.edu>) is the current developer and maintainer of the AdaptiveResonance package, so please feel free to reach out with thoughts and questions.","category":"page"},{"location":"man/full-index/#main-index","page":"Index","title":"Index","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Pages = [\"lib/public.md\"]","category":"page"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Modules = [CVI]","category":"page"},{"location":"man/full-index/#CVI.DB","page":"Index","title":"CVI.DB","text":"DB\n\nThe stateful information of the Xie-Beni CVI.\n\n\n\n\n\n","category":"type"},{"location":"man/full-index/#CVI.DB-Tuple{}","page":"Index","title":"CVI.DB","text":"DB()\n\nDefault constructor for the Xie-Beni (DB) Cluster Validity Index.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.PS","page":"Index","title":"CVI.PS","text":"PS\n\nThe stateful information of the Xie-Beni CVI.\n\n\n\n\n\n","category":"type"},{"location":"man/full-index/#CVI.PS-Tuple{}","page":"Index","title":"CVI.PS","text":"PS()\n\nDefault constructor for the Partition Separation (PS) Cluster Validity Index.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.XB","page":"Index","title":"CVI.XB","text":"XB\n\nThe stateful information of the Xie-Beni CVI.\n\n\n\n\n\n","category":"type"},{"location":"man/full-index/#CVI.XB-Tuple{}","page":"Index","title":"CVI.XB","text":"XB()\n\nDefault constructor for the Xie-Beni (XB) Cluster Validity Index.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.evaluate!-Tuple{DB}","page":"Index","title":"CVI.evaluate!","text":"evaluate!(cvi::DB)\n\nCompute the criterion value of the DB CVI.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.evaluate!-Tuple{PS}","page":"Index","title":"CVI.evaluate!","text":"evaluate!(cvi::PS)\n\nCompute the criterion value of the PS CVI.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.evaluate!-Tuple{XB}","page":"Index","title":"CVI.evaluate!","text":"evaluate!(cvi::XB)\n\nCompute the criterion value of the XB CVI.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.expand_array-Union{Tuple{Array{N,1}}, Tuple{N}} where N<:Real","page":"Index","title":"CVI.expand_array","text":"expand_array(arr::Array{Float64, 1} ; n::Int64 = 1)\n\nExpand a 1-D array by n zeros (default is 1).\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.expand_array-Union{Tuple{Array{N,2}}, Tuple{N}} where N<:Real","page":"Index","title":"CVI.expand_array","text":"expand_array(arr::Array{Float64, 2} ; n::Int64 = 1)\n\nExpand the dimension of a 2-D array by n in each dimension (default 1).\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.get_cvi!-Union{Tuple{M}, Tuple{N}, Tuple{T}, Tuple{T,Array{N,2},Array{M,1}}} where M<:Int64 where N<:Real where T<:CVI.AbstractCVI","page":"Index","title":"CVI.get_cvi!","text":"get_cvi!(cvi::T, x::Array{N, 2}, y::Array{M, 1}) where {T<:AbstractCVI, N<:Real, M<:Int}\n\nPorcelain: update compute the criterion value in batch and return it.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.get_icvi!-Union{Tuple{M}, Tuple{N}, Tuple{T}, Tuple{T,Array{N,1},M}} where M<:Int64 where N<:Real where T<:CVI.AbstractCVI","page":"Index","title":"CVI.get_icvi!","text":"get_icvi!(cvi::T, x::Array{N, 1}, y::M) where {T<:AbstractCVI, N<:Real, M<:Int}\n\nPorcelain: update and compute the criterion value incrementally and return it.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.param_batch!-Union{Tuple{I}, Tuple{T}, Tuple{DB,Array{T,2},Array{I,1}}} where I<:Int64 where T<:Real","page":"Index","title":"CVI.param_batch!","text":"param_batch!(cvi::DB, data::Array{T, 2}, labels::Array{I, 1}) where {T<:Real, I<:Int}\n\nCompute the DB CVI in batch.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.param_batch!-Union{Tuple{I}, Tuple{T}, Tuple{PS,Array{T,2},Array{I,1}}} where I<:Int64 where T<:Real","page":"Index","title":"CVI.param_batch!","text":"param_batch!(cvi::PS, data::Array{T, 2}, labels::Array{I, 1}) where {T<:Real, I<:Int}\n\nCompute the PS CVI in batch.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.param_batch!-Union{Tuple{I}, Tuple{T}, Tuple{XB,Array{T,2},Array{I,1}}} where I<:Int64 where T<:Real","page":"Index","title":"CVI.param_batch!","text":"param_batch!(cvi::XB, data::Array{T, 2}, labels::Array{I, 1}) where {T<:Real, I<:Int}\n\nCompute the XB CVI in batch.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.param_inc!-Union{Tuple{I}, Tuple{T}, Tuple{DB,Array{T,1},I}} where I<:Int64 where T<:Real","page":"Index","title":"CVI.param_inc!","text":"param_inc!(cvi::DB, sample::Array{T, 1}, label::I) where {T<:Real, I<:Int}\n\nCompute the DB CVI incrementally.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.param_inc!-Union{Tuple{I}, Tuple{T}, Tuple{PS,Array{T,1},I}} where I<:Int64 where T<:Real","page":"Index","title":"CVI.param_inc!","text":"param_inc!(cvi::PS, sample::Array{T, 1}, label::I) where {T<:Real, I<:Int}\n\nCompute the PS CVI incrementally.\n\n\n\n\n\n","category":"method"},{"location":"man/full-index/#CVI.param_inc!-Union{Tuple{I}, Tuple{T}, Tuple{XB,Array{T,1},I}} where I<:Int64 where T<:Real","page":"Index","title":"CVI.param_inc!","text":"param_inc!(cvi::XB, sample::Array{T, 1}, label::I) where {T<:Real, I<:Int}\n\nCompute the XB CVI incrementally.\n\n\n\n\n\n","category":"method"},{"location":"man/guide/#Package-Guide","page":"Guide","title":"Package Guide","text":"","category":"section"},{"location":"man/guide/#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"The CVI package can be installed using the Julia package manager. From the Julia REPL, type ']' to enter the Pkg REPL mode and run","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"pkg> add CVI","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"Alternatively, it can be added to your environment in a script with","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"using Pkg\nPkg.add(\"CVI\")","category":"page"},{"location":"man/examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"man/examples/","page":"Examples","title":"Examples","text":"There are examples for every structure in the package within the package's examples/ folder. The code for several of these examples is provided here.","category":"page"},{"location":"man/examples/#CVI","page":"Examples","title":"CVI","text":"","category":"section"},{"location":"man/examples/#Xie-Beni-(XB)","page":"Examples","title":"Xie-Beni (XB)","text":"","category":"section"},{"location":"man/examples/","page":"Examples","title":"Examples","text":"cvi = XB()","category":"page"},{"location":"#CVI.jl","page":"Home","title":"CVI.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The Package Guide provides a tutorial explaining how to get started using Documenter.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Some examples of packages using Documenter can be found on the Examples page.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Index for the complete list of documented functions and types.","category":"page"},{"location":"#Manual-Outline","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"man/guide.md\",\n    \"man/examples.md\",\n    \"man/contributing.md\",\n    \"man/full-index.md\",\n]\nDepth = 1","category":"page"}]
}
